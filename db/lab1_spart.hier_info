|lab1_spart
CLOCK_50 => CLOCK_50.IN2
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
HEX0[0] <= <GND>
HEX0[1] <= <GND>
HEX0[2] <= <GND>
HEX0[3] <= <GND>
HEX0[4] <= <GND>
HEX0[5] <= <GND>
HEX0[6] <= <VCC>
HEX1[0] <= <GND>
HEX1[1] <= <GND>
HEX1[2] <= <GND>
HEX1[3] <= <GND>
HEX1[4] <= <GND>
HEX1[5] <= <GND>
HEX1[6] <= <VCC>
HEX2[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= <GND>
HEX3[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= <GND>
HEX3[2] <= <GND>
HEX3[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= <GND>
HEX3[6] <= <GND>
HEX4[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= SW[9].DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] <= SW[9].DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
KEY[0] => rst.IN2
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= rst.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= spart:spart0.txd
LEDR[9] <= rxd.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => Decoder0.IN1
SW[9] => Decoder0.IN0
SW[9] => HEX4[2].DATAIN
SW[9] => HEX4[1].DATAIN
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> GPIO[3]
GPIO[4] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>


|lab1_spart|spart:spart0
clk => clk.IN1
rst => tx_data[0].ACLR
rst => tx_data[1].ACLR
rst => tx_data[2].ACLR
rst => tx_data[3].ACLR
rst => tx_data[4].ACLR
rst => tx_data[5].ACLR
rst => tx_data[6].ACLR
rst => tx_data[7].ACLR
rst => databus_reg[0].ACLR
rst => databus_reg[1].ACLR
rst => databus_reg[2].ACLR
rst => databus_reg[3].ACLR
rst => databus_reg[4].ACLR
rst => databus_reg[5].ACLR
rst => databus_reg[6].ACLR
rst => databus_reg[7].ACLR
rst => rst_n.IN1
br_cfg[0] => Equal0.IN1
br_cfg[0] => Equal1.IN0
br_cfg[0] => Equal2.IN1
br_cfg[0] => Equal3.IN1
br_cfg[1] => Equal0.IN0
br_cfg[1] => Equal1.IN1
br_cfg[1] => Equal2.IN0
br_cfg[1] => Equal3.IN0
iocs => databus[0].OE
iocs => databus[1].OE
iocs => databus[2].OE
iocs => databus[3].OE
iocs => databus[4].OE
iocs => databus[5].OE
iocs => databus[6].OE
iocs => databus[7].OE
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
iorw => tx_data.OUTPUTSELECT
rda <= UART:uart_bottom.rx_rdy
tbr <= trmt.DB_MAX_OUTPUT_PORT_TYPE
ioaddr[0] => Equal4.IN1
ioaddr[0] => Equal5.IN1
ioaddr[1] => Equal4.IN0
ioaddr[1] => Equal5.IN0
databus[0] <> databus[0]
databus[1] <> databus[1]
databus[2] <> databus[2]
databus[3] <> databus[3]
databus[4] <> databus[4]
databus[5] <> databus[5]
databus[6] <> databus[6]
databus[7] <> databus[7]
txd <= UART:uart_bottom.TX
rxd => rxd.IN1


|lab1_spart|spart:spart0|UART:uart_bottom
clk => clk.IN2
rst_n => rst_n.IN2
RX => RX.IN1
TX <= UART_tx:iTX.TX
rx_rdy <= UART_rx:iRX.rdy
clr_rx_rdy => clr_rx_rdy.IN1
rx_data[0] <= UART_rx:iRX.rx_data
rx_data[1] <= UART_rx:iRX.rx_data
rx_data[2] <= UART_rx:iRX.rx_data
rx_data[3] <= UART_rx:iRX.rx_data
rx_data[4] <= UART_rx:iRX.rx_data
rx_data[5] <= UART_rx:iRX.rx_data
rx_data[6] <= UART_rx:iRX.rx_data
rx_data[7] <= UART_rx:iRX.rx_data
trmt => trmt.IN1
tx_data[0] => tx_data[0].IN1
tx_data[1] => tx_data[1].IN1
tx_data[2] => tx_data[2].IN1
tx_data[3] => tx_data[3].IN1
tx_data[4] => tx_data[4].IN1
tx_data[5] => tx_data[5].IN1
tx_data[6] => tx_data[6].IN1
tx_data[7] => tx_data[7].IN1
tx_done <= UART_tx:iTX.tx_done
baud_goal[0] => baud_goal[0].IN2
baud_goal[1] => baud_goal[1].IN2
baud_goal[2] => baud_goal[2].IN2
baud_goal[3] => baud_goal[3].IN2
baud_goal[4] => baud_goal[4].IN2
baud_goal[5] => baud_goal[5].IN2
baud_goal[6] => baud_goal[6].IN2
baud_goal[7] => baud_goal[7].IN2
baud_goal[8] => baud_goal[8].IN2
baud_goal[9] => baud_goal[9].IN2
baud_goal[10] => baud_goal[10].IN2
baud_goal[11] => baud_goal[11].IN2
baud_goal[12] => baud_goal[12].IN2
baud_goal[13] => baud_goal[13].IN2


|lab1_spart|spart:spart0|UART:uart_bottom|UART_tx:iTX
clk => tx_done~reg0.CLK
clk => state.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => tx_shft_reg[0].CLK
clk => tx_shft_reg[1].CLK
clk => tx_shft_reg[2].CLK
clk => tx_shft_reg[3].CLK
clk => tx_shft_reg[4].CLK
clk => tx_shft_reg[5].CLK
clk => tx_shft_reg[6].CLK
clk => tx_shft_reg[7].CLK
clk => tx_shft_reg[8].CLK
rst_n => tx_shft_reg[0].PRESET
rst_n => tx_shft_reg[1].PRESET
rst_n => tx_shft_reg[2].PRESET
rst_n => tx_shft_reg[3].PRESET
rst_n => tx_shft_reg[4].PRESET
rst_n => tx_shft_reg[5].PRESET
rst_n => tx_shft_reg[6].PRESET
rst_n => tx_shft_reg[7].PRESET
rst_n => tx_shft_reg[8].PRESET
rst_n => tx_done~reg0.ACLR
rst_n => state.ACLR
trmt => nxt_state.OUTPUTSELECT
trmt => init.DATAA
baud_goal[0] => Equal0.IN15
baud_goal[1] => Equal0.IN14
baud_goal[2] => Equal0.IN13
baud_goal[3] => Equal0.IN12
baud_goal[4] => Equal0.IN11
baud_goal[5] => Equal0.IN10
baud_goal[6] => Equal0.IN9
baud_goal[7] => Equal0.IN8
baud_goal[8] => Equal0.IN7
baud_goal[9] => Equal0.IN6
baud_goal[10] => Equal0.IN5
baud_goal[11] => Equal0.IN4
baud_goal[12] => Equal0.IN3
baud_goal[13] => Equal0.IN2
tx_data[0] => tx_shft_reg.DATAB
tx_data[1] => tx_shft_reg.DATAB
tx_data[2] => tx_shft_reg.DATAB
tx_data[3] => tx_shft_reg.DATAB
tx_data[4] => tx_shft_reg.DATAB
tx_data[5] => tx_shft_reg.DATAB
tx_data[6] => tx_shft_reg.DATAB
tx_data[7] => tx_shft_reg.DATAB
TX <= tx_shft_reg[0].DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab1_spart|spart:spart0|UART:uart_bottom|UART_rx:iRX
clk => rdy~reg0.CLK
clk => state.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => rx_shft_reg[0].CLK
clk => rx_shft_reg[1].CLK
clk => rx_shft_reg[2].CLK
clk => rx_shft_reg[3].CLK
clk => rx_shft_reg[4].CLK
clk => rx_shft_reg[5].CLK
clk => rx_shft_reg[6].CLK
clk => rx_shft_reg[7].CLK
clk => rx_shft_reg[8].CLK
clk => RX_sync.CLK
clk => RX_FF1.CLK
rst_n => rdy~reg0.ACLR
rst_n => RX_sync.PRESET
rst_n => RX_FF1.PRESET
rst_n => state.ACLR
RX => RX_FF1.DATAIN
baud_goal[0] => baud_cnt.DATAB
baud_goal[1] => baud_cnt.DATAB
baud_goal[1] => baud_cnt.DATAB
baud_goal[2] => baud_cnt.DATAB
baud_goal[2] => baud_cnt.DATAB
baud_goal[3] => baud_cnt.DATAB
baud_goal[3] => baud_cnt.DATAB
baud_goal[4] => baud_cnt.DATAB
baud_goal[4] => baud_cnt.DATAB
baud_goal[5] => baud_cnt.DATAB
baud_goal[5] => baud_cnt.DATAB
baud_goal[6] => baud_cnt.DATAB
baud_goal[6] => baud_cnt.DATAB
baud_goal[7] => baud_cnt.DATAB
baud_goal[7] => baud_cnt.DATAB
baud_goal[8] => baud_cnt.DATAB
baud_goal[8] => baud_cnt.DATAB
baud_goal[9] => baud_cnt.DATAB
baud_goal[9] => baud_cnt.DATAB
baud_goal[10] => baud_cnt.DATAB
baud_goal[10] => baud_cnt.DATAB
baud_goal[11] => baud_cnt.DATAB
baud_goal[11] => baud_cnt.DATAB
baud_goal[12] => baud_cnt.DATAB
baud_goal[13] => ~NO_FANOUT~
clr_rdy => always6.IN1
rx_data[0] <= rx_shft_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_shft_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_shft_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_shft_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_shft_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_shft_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_shft_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_shft_reg[7].DB_MAX_OUTPUT_PORT_TYPE
rdy <= rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab1_spart|driver:driver0
clk => state~1.DATAIN
rst => state~3.DATAIN
iocs <= <VCC>
iorw <= iorw.DB_MAX_OUTPUT_PORT_TYPE
rda => trmt.DATAB
tbr => ~NO_FANOUT~
ioaddr[0] <= ioaddr.DB_MAX_OUTPUT_PORT_TYPE
ioaddr[1] <= trmt.DB_MAX_OUTPUT_PORT_TYPE
databus[0] <> <UNC>
databus[1] <> <UNC>
databus[2] <> <UNC>
databus[3] <> <UNC>
databus[4] <> <UNC>
databus[5] <> <UNC>
databus[6] <> <UNC>
databus[7] <> <UNC>


